Index: Deepesh/PythonProgramming/PythonString/Python_string_22July24.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nProperties\r\n-> string is immutable data type\r\n-> string can be defined in single/double/triple quotes.\r\n-> string follows the positive negative indexing\r\n->\r\n\"\"\"\r\nName = \"Rahul\"\r\nAge = 25\r\nCity = \"Mumbai\"\r\nemail = \"rahul@ggmail.com\"\r\n\r\n# My name is Rahul and my age is 25 and living in mumbai\r\n\r\n# 1. String concatenation\r\n\r\nresult = \"My name is \"+Name+\" and my age is \"+str(Age)+\" and living in \"+City\r\nprint(result)\r\n\r\n# 2.  Format method\r\nresult2 =  \"My name is {} and my age is {} and living in {}\".format(Name, Age, City)\r\nprint(\"result2 :\", result2)\r\n\r\n# 3. F string formatting\r\nresult3 = f\"My name is {Name} and my age is {Age}, {email} and living in {City}\"\r\nprint(\"result3 :\", result3)\r\n\r\nprint(\"_\"*50)\r\n\r\n\r\n# raw string\r\n\r\nstr2 = 'Hello Good Morning \\n Hope you are doing \"good\" \\t\\t, Python Programming'\r\nprint(str2)\r\n\r\nstr3 = r\"Hello Good Morning \\n 'Hope you are doing good' \\t\\t, Python Programming\"\r\nprint(\"str3 :\", str3)\r\n\r\n# Apply loop on the string\r\nprint(\"_\"*50)\r\n\r\nstr4 = \"Python Programming\"\r\nfor char in str4:\r\n    print(char)\r\n\r\n# Apply loop with index position\r\nprint(\"_\"*50)\r\nstr5 = \"Good Morning\"\r\nlen_str = len(str5)\r\n\r\nfor i in range(len_str):\r\n    print(i,\":\", str5[i])\r\n\r\nprint(\"_\"*50)\r\n############  String Slicing ############\r\n# Rule 1: str[initial index: last index]\r\n# output will include initial index char and exclude last index character\r\n# Output substring always get the output from left to right\r\n\r\nstr_a = \"Good Morning\"\r\noutput = str_a[0:8]\r\nprint(\"output :\", output)\r\n# with negative indexing\r\nprint(str_a[2: -2])  # od Morni\r\n\r\n# as per the rule output can not contain char from negative to positive index\r\nprint(str_a[-1: 2]) # Noi output\r\n\r\nstr_b = \"Python Programming\"\r\nprint(str_b[4:8])  # on P\r\nprint(str_b[2:-5]) # thon Progra\r\nprint(str_b[-8: -2]) # grammi\r\nprint(str_b[7:-13]) # No output\r\n\r\n####################\r\n# Rule2\r\n# i) str[:last index]\r\n# default initial index is zero\r\n\r\n# ii) str[initial index :]\r\n# default last index will be end of the string\r\n\r\nstr_c = \"Learning is Fun\"\r\nprint(str_c[:5]) # Learn\r\n\r\nprint(str_c[:-2]) # Learning is F\r\n\r\nprint(str_c[:8]) # Learning\r\n\r\n#ii) default end index would be end of the string\r\n\r\nstr_d = \"Good Evening\"\r\nprint(str_d[3:])  # d Evening\r\nprint(str_d[-5:]) # ening\r\n\r\nprint(\"_\"*40)\r\n##############\r\n# Rule3 : str1[initial index: end index: difference]\r\n\r\nstr1 = \"We Are Learning Python\"\r\n\r\nprint(str1[3 :10: 1])  # Are Lea\r\n\r\nprint(str1[1:12:2])  # eAeLan\r\n\r\n# get values with negative indexing\r\nprint(str1[-1:-10:-1])  # nohtyP gn\r\n\r\nprint(str1[4:-2:1]) # re Learning Pyth\r\n\r\n##################\r\n# Rule3: str1[:last index: difference]\r\n# the default initial index would be zero if difference is positive\r\n# The default initial index would be -1 if the difference is negative.\r\n\r\n\r\nstr_b = \"Python is very to learn\"\r\nprint(str_b[:-5:1])  # Python is very to\r\nprint(str_b[:-15:-2]) # nrae\r\n\r\n\r\n# Rule4 :\r\nprint(str_b[::-1]) # str1[:: difference]\r\n# default initial index would be zero\r\n# default last index would end of the string.\r\n\r\n\r\nstr_c= \"Good Morning\"\r\nprint(str_c[2: 15])\r\n\r\nprint(str_c[::-1])\r\nprint(str_c[-1:-len(str_c)-1: -1])\r\n\r\nprint(\"_\"*50)\r\n# Q1:\r\nstr1 = \"Best player is Virat\"\r\n# output = \"Virat is best player\"\r\n\r\nw1 = str1[:12]\r\nw2 = str1[12:14]\r\nw3 = str1[15:]\r\n\r\nprint(f\"{w3} {w2} {w1}\")  # Virat is Best player\r\n\r\n#Q2:\r\nstr1 = \"India is Best Cricket Team\"\r\n# output = \"mndia is Best Cricket TeaI\"\r\n\r\nfirst_char = str1[0]\r\nlast_char = str1[-1]\r\nremaining_chars = str1[1:-1]\r\n\r\nprint(f\"{last_char}{remaining_chars}{first_char}\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Deepesh/PythonProgramming/PythonString/Python_string_22July24.py b/Deepesh/PythonProgramming/PythonString/Python_string_22July24.py
--- a/Deepesh/PythonProgramming/PythonString/Python_string_22July24.py	(revision e903e3052cd861a55c4a36389d2aae8ba0d2e83c)
+++ b/Deepesh/PythonProgramming/PythonString/Python_string_22July24.py	(date 1721913841162)
@@ -1,3 +1,4 @@
+
 """
 Properties
 -> string is immutable data type
@@ -66,7 +67,7 @@
 # as per the rule output can not contain char from negative to positive index
 print(str_a[-1: 2]) # Noi output
 
-str_b = "Python Programming"
+str_b = ("Python Programming")
 print(str_b[4:8])  # on P
 print(str_b[2:-5]) # thon Progra
 print(str_b[-8: -2]) # grammi
@@ -104,7 +105,8 @@
 print(str1[1:12:2])  # eAeLan
 
 # get values with negative indexing
-print(str1[-1:-10:-1])  # nohtyP gn
+print(str1[-1:-10:-1
+      ])  # nohtyP gn
 
 print(str1[4:-2:1]) # re Learning Pyth
 
Index: Kalpashree/PythonProgramm/BasicPrograms/If_Else Programs.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#### Check the number is divisible by 3 ####\r\nnuma = 21\r\nif numa%3 == 0:\r\n    print(\"Number is divisible by 3\")\r\nelse:\r\n    print(\"Number is not divisible by 3\")\r\n\r\n#### check the numbers is dvisible by 3 between 1 to30 ####\r\nprint(\"_\"*50)\r\nfor i in range(1,31):\r\n    if i%3 == 0:\r\n        print(i,end=\" \")\r\n        print()\r\n\r\n#### If-else program to assign grades as per total marks ####\r\nprint(\"_\"*70)\r\nmarks = 60\r\nif marks<40:\r\n    print(\"Fail\")\r\nelif marks>=40 and marks<=50:\r\n    print(\"GraDe C\")\r\nelif marks>=50 and marks<=60:\r\n    print(\"GraDe B\")\r\nelif marks>=60 and marks<=70:\r\n    print(\"GraDe A\")\r\nelif marks>=70 and marks<=80:\r\n    print(\"GraDe A+\")\r\nelif marks>=80 and marks<=90:\r\n    print(\"GraDe A++\")\r\nelif marks>=90 and marks<=100:\r\n    print(\"Excellent\")\r\nelse:\r\n    print(\"Inavlid marks\")\r\n\r\n\r\n#### Python program to check number is divided by 3 and 5 ####\r\nprint(\"_\"*50)\r\nnumb = 15\r\nif numb%3==0 and numb%5==0:\r\n    print(\"Given number is  divided by 3 and 5\")\r\nelse:\r\n    print(\"Given number cant be divided by 3 and 5\")\r\n\r\n#### Python program to print the square of the number ####\r\nprint('_'*50)\r\nvar =  33\r\nif var%11 == 0:\r\n    print(var**2)\r\nelse:\r\n    print(\"Number is not divisible by 11\")\r\n\r\n####Program to check whether the number is a prime number ####\r\nprint('_'*50)\r\nnumc = 7\r\ncount = 0\r\nfor i in range(2,numc):\r\n    if numc%i == 0:\r\n        count += 1\r\nif count > 0:\r\n    print(\"It is not a prime number\")\r\nelse:\r\n    print(\"It is a prime number\")\r\n\r\n####Program to check whether the number is odd or even ####\r\nprint('_'*50)\r\nnumd =  12\r\nif numd%2 == 0:\r\n   print(\"It is an even number\")\r\nelse:\r\n   print(\"It is an odd number\")\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Kalpashree/PythonProgramm/BasicPrograms/If_Else Programs.py b/Kalpashree/PythonProgramm/BasicPrograms/If_Else Programs.py
--- a/Kalpashree/PythonProgramm/BasicPrograms/If_Else Programs.py	(revision e903e3052cd861a55c4a36389d2aae8ba0d2e83c)
+++ b/Kalpashree/PythonProgramm/BasicPrograms/If_Else Programs.py	(date 1721918365539)
@@ -69,5 +69,29 @@
 else:
    print("It is an odd number")
 
+####Fibonacci series####
+print('_'*50)
+fib = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
+numE = 13
+if numE in fib:
+    print("It is a part of the series")
+else:
+    print("It is not a part of the series")
 
+###authentication of username and password####
+print('_'*50)
+Uname = "EPOSAudio"
+password = "EPOSAudio"
+if Uname == password:
+    print("It is valid")
+else:
+    print("It is not valid")
 
+###validate user_id in the list of user_ids####
+print('_'*50)
+id_list = [10,20,30,50,60,70,80]
+id_ = 50
+if id_ in id_list:
+    print("Valid ID")
+else:
+    print("Invalid ID")
Index: Kalpashree/PythonProgramm/BasicPrograms/Homework.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Kalpashree/PythonProgramm/BasicPrograms/Homework.py b/Kalpashree/PythonProgramm/BasicPrograms/Homework.py
new file mode 100644
--- /dev/null	(date 1722005047883)
+++ b/Kalpashree/PythonProgramm/BasicPrograms/Homework.py	(date 1722005047883)
@@ -0,0 +1,21 @@
+#Q2 write a python program to find the odd and even length words, and arrange them respectively
+# even word come first then odd len word.
+str_3 = "Good Morning , Hope you doing good"
+#output = "good Hope Good Morning you doing"
+result1 = str_3.split(" ")
+for i in result1:
+  if len(i)%2==0:
+    print(i,end=" ")\
+
+result2 = str_3.split(" ")
+for i in result2:
+  if len(i)%2==1:
+    print(i,end=" ")
+
+#Q1 write a python program to get all the word whose length is 5
+str2 = "Hello Good rning, WeAre Learning Pytho Programming"
+#output = "Hello rning WeAre Pytho"
+result = str2.split(" ")
+for i in result:
+    if len(i)==5:
+    print(i)
Index: Kalpashree/PythonProgramm/BasicPrograms/Loops_program.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#####Find numbers divisible by a certain number####\r\nfor i in range(14,200):\r\n        if i%7 == 0 and i%5 == 0:\r\n            print(i, end=\" \")\r\n\r\n#######Construct the  pattern.####\r\nfor i in range(6):\r\n    print(i*\"*\")\r\nfor i in range(4,-1,-1):\r\n    print(i*\"*\")
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Kalpashree/PythonProgramm/BasicPrograms/Loops_program.py b/Kalpashree/PythonProgramm/BasicPrograms/Loops_program.py
--- a/Kalpashree/PythonProgramm/BasicPrograms/Loops_program.py	(revision e903e3052cd861a55c4a36389d2aae8ba0d2e83c)
+++ b/Kalpashree/PythonProgramm/BasicPrograms/Loops_program.py	(date 1721913947307)
@@ -7,4 +7,8 @@
 for i in range(6):
     print(i*"*")
 for i in range(4,-1,-1):
-    print(i*"*")
\ No newline at end of file
+    print(i*"*")
+
+
+
+
